4E00～9FFFh：中日韩认同表意文字区，总计收容20,902个中日韩汉字。

需要注意的是论坛里说的^[\u4E00-\u9FA5]+$这是专门用于匹配简体中文的正则表达式, 实际上繁体字也在里面

>>> print re.match(ur"[\u4e00-\u9fa5]+",u"啊")
<_sre.SRE_Match object at 0x2a98981308>

字符集	字数	Unicode 编码
基本汉字	20902字	4E00-9FA5     (http://blog.csdn.net/shuaixingrumo/article/details/75115891)
=======================================================================

https://regexone.com/references/python
=======================================================================

使用Python正则表达式RE从CSDN博客源代码中匹配出博客信息
http://blog.csdn.net/gatieme/article/details/43275077

### read txt file, 提取中文
#coding=utf-8 
import imp 
import sys 
imp.reload(sys) 
sys.setdefaultencoding('utf-8') #设置默认编码,只能是utf-8,下面\u4e00-\u9fa5要求的
import re   
pchinese=re.compile('([\u4e00-\u9fa5]+)+?') #判断是否为中文的正则表达式
f=open("data.txt") #打开要提取的文件
fw=open("getdata.txt","w")#打开要写入的文件
for line in f.readlines():   #循环读取要读取文件的每一行
    m=pchinese.findall(str(line)) #使用正则表达获取中文
    if m:
        str1='|'.join(m)#同行的中文用竖杠区分
        str2=str(str1)
        fw.write(str2)#写入文件
        fw.write("\n")#不同行的要换行
f.close()
fw.close()#打开的文件记得关闭哦!
复制代码
http://www.cnblogs.com/xinzaitian/archive/2010/11/30/1892208.html
=======================================================================

Python过滤中文re匹配
作者：LinuxHub   发布：2016-01-14 16:57   分类：Python    
1.Python过滤出中文汉字

import re
string = 'abc测试123<>《》！*(^)$%~!@#$…&%￥—+=、。，；‘’“”：·`中文'
string = string.decode("utf-8")
filtrate = re.compile(u'[^\u4E00-\u9FA5]')#非中文
filtered_str = filtrate.sub(r' ', string)#replace
print filtered_str

2.Python过滤出中文汉字,字母，数字与下划线

import re
string = "[]测试#server?user_id=110"
string = string.decode("utf-8")
filtrate = re.compile(u'[^\u4E00-\u9FA5A-Za-z0-9_]')#中文字,字母,下划线
filtered_str = filtrate.sub(r' ', string)#replace
print filtered_str
http://www.linuxhub.org/?p=3196
=======================================================================

python代码文件的编码

py文件默认是ASCII编码，中文在显示时会做一个ASCII到系统默认编码的转换，这时就会出错：SyntaxError: Non-ASCII character。需要在代码文件的第一行或第二行添加编码指示：

# coding=utf-8 ##以utf-8编码储存中文字符
print '中文'像上面那样直接输入的字符串是按照代码文件的编码来处理的，如果用unicode编码，有以下2种方式：
s1 = u'中文' #u表示用unicode编码方式储存信息
s2 = unicode('中文','gbk')
unicode是一个内置函数，第二个参数指示源字符串的编码格式。

decode是任何字符串具有的方法，将字符串转换成unicode格式，参数指示源字符串的编码格式。

encode也是任何字符串具有的方法，将字符串转换成参数指定的格式。

python字符串的编码

用 u'汉字' 构造出来的是unicode类型，不用的话构造出来是str类型

str的编码是与系统环境相关的，一般就是sys.getfilesystemencoding()得到的值

所以从unicode转str，要用encode方法

从str转unicode，所以要用decode

例如：

# coding=utf-8   #默认编码格式为utf-8

s = u'中文' #unicode编码的文字
print s.encode('utf-8')   #转换成utf-8格式输出 
print s #效果与上面相同，似乎默认直接转换为指定编码
我的总结：

u=u'unicode编码文字'
g=u.encode('gbk') #转换为gbk格式
print g #此时为乱码，因为当前环境为utf-8,gbk编码文字为乱码
str=g.decode('gbk').encode('utf-8')   #以gbk编码格式读取g（因为他就是gbk编码的）并转换为utf-8格式输出
print str #正常显示中文
安全的方法：

s.decode('gbk','ignore').encode('utf-8′) #以gbk编码读取（当然是读取gbk编码格式的文字了）并忽略错误的编码，转换成utf-8编码输出 
因为decode的函数原型是decode([encoding], [errors='strict'])，可以用第二个参数控制错误处理的策略，默认的参数就是strict，代表遇到非法字符时抛出异常；

如果设置为ignore，则会忽略非法字符； 
如果设置为replace，则会用?取代非法字符； 
如果设置为xmlcharrefreplace，则使用XML的字符引用。
http://outofmemory.cn/code-snippet/629/python-duxie-file-setting-file-charaeter-coding-biru-utf-8
=======================================================================




